<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbPortada.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        sQAAA7EB9YPtSQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABZjSURBVHhe7Z13
        WBVXE4cjFlCsKESxl9hrsPeOBXsJRsWKDY3YY42pmkSNGFvsPcYYu0axxdh7b7E3RE0QG5aU+Wb2g2XP
        7twG9+IFzjzP+wfcPeXu/O45Z07ZfUea05kr0hj5AtmKXEEiEECikEfIMWQZ0h8pjkhLAuaDLECeIORs
        WziLDEEyItIsWAakGzIRCUEGIHmRt2X0C96EcI61FWopRiPUikjTGd2UcUgkor9xfyNLkRxIQlkK5CPk
        JaKvj0pG99RQvEBm8CnuCT4l34V8uTJBqlQu7LUa/kCqItKirTpyAeFulpbHSCBCznGkZUOofzfUwc01
        JbRrkB+Wflkbbm/tAHCuL8C1wQC3Rqi8vjoUjmwIgAkjakGZYl6GPKIhUQ9CkrVlQmYj/yHcTTLFHqQI
        4gjzRM4gQpkZ8Jc+rnc5+PO3zgCnegKcRi4NALgZ63hTHFjbCRrVLiDkp+E7xNGCdkprjdxDDDelSaNG
        sG3TRjj4+x74qH8QpE6d2nAN8goZi6RB7GVeCA3YhLKaVM8Nd0Px106OV5wfaPjVW8P6eW3AM2s6Ie9o
        JiHJxnIi6xDDjciePTv8uHQJvH72RODogf1QwcfHcH005xB79KepkEOIkP+IbmXg3xM9Yp1/SnT+swuD
        4OKunrBn1YdwaF1nuHu4H7y5NkxwvJYb+/tA6WKeQhnRBCFJ2lyQfoghjEqRIgX07NYVHty9bXB+DFGR
        ETD564mQ3t1dSBvNv8h0JD5h1meImqeLSwpY+FlNjeOjuTYE7h/rr/Tvlct5K9dp0xGZMriCf/NisHp2
        S/j3xnCDCEg0TJdALVp5JElaCWQ/ov/SUKRwYdixdQvrdI4r589BI9+GhnyiuYu0QGy1asg/iJrX50E+
        Bue/ONUPxg2shiJMoy3TLPRr37a0vUEELy4Nhirv59RffxqhlijJGIV2nyKvEeHLpkmTBkaNGA5P/3zI
        OtoSSxcuAC8vkyPs1YgtIeMRRE3v36gg/HdSdP7dXZ2hfOns2jKsJkUK7Er6Vja0BtRdZPNIq7+e5j2S
        hFFodx7Rf0GoUqkSnDxyiHWsLVCXQV0HdSFMOTSfMBChrsecNUTUdDmypYPIfQGC869sbA/ZPdmuB4rn
        c4eujb1hdEB+CG6fB1rV9IJM7qnYazu2LA7/6aKGZSHN9NfdR9IiidYyIz8ghtAuY4YMEDJlMrx88ph1
        aFwJ3bwJChUsKJSl4XekKGLKfkPU65d8UVtwPomhaP4s2vwUWtfygnNLqgDsrW/g9a66sGxsSciX3fDr
        hvGDqgsCIEEwXQHNhCZKa4uEIfovBM2aNoUbly+yDrQHkQ/DYfiQweZCRppl1IeMJAz1uvw5M8Dfx7sL
        AujsV0ibD7ilcYGlY0uwjtfzLLQOtKgujvipO9j3S0dBBJsWthWuQXYjicpyIesR/RdRQruVy5ayTnME
        xw4eMBcyUpdEA74YG4Won+sHfqdWtRZG+eS8nz4txTrbFP/uqQfNqokiqITRg7YroLFBbu+M2msoqqHZ
        SKc36l8pfmVDu8Du3cyGdo6CQsYp33xtLmScidAsZGj0/xQurWsnCOADXzFUoz6ec7IlIrfWhuweYuSw
        a2UHoRUI7lFe+Bxphzi1lUQOIPqKQ9EiRWDntl9Z55iDxga/7QiFT8aMVgZ3NCPY2NcXugUEwJiRHyt9
        PTmXS8tx9cJ5JT1XR4RCxucxf+f0chec/+pIN2X6N+bzjDiw+2tzLdbB1jBjcFE1L2JAV2xtNALYML+N
        8DnyLeKUlhoZgVC/KlSa+t+hg4JtDu3C79xS0pkJ61SyenhAUN8+cPf6VTYvjjWrVoK3tzebXwxNa+QW
        BBA6u7HweceG2VnHWsvjX2tD6lSx3UmBPJkFAdw+2FcoD6Eu1emsFnIJ0VcWqlauDKeOHmYdYI6QyZPA
        I4txlG2JDOnTw5effQqvnkay+eohkXXt3NlUyAj9/YsLApg1uprw+cJR+DnjWFuoUjKTml/KlCngb82U
        MY0J0qROqS3zOOI0Rv0lbc6g/lNbSSW0oylaW0M7aiW6dOok5BUXqIl/FHaXLYODuiaafdTnMyawnCCA
        sb3KCZ/vDHmfdaottK/7rpAnTQRpWwHdpBDtGXAKo8EITU5oK6fQ3M8vTqHdi8d/QYP69Qz5ubi4gC/+
        f/qUSXBk7264ffkChN+6AadOnIAF8+dDixYtIFUq4yRLpQoVlDCQK4vjyaMH0Cewp5AHOVwrgJE9ygif
        756GfTbjVFv4sIE4k0gLQ1oBvJtNGLTSXsO3armRDYi2Ugo5cuSAn5bHPbTr27uXIc8qlSrC3h3b4NnD
        MBVqVd68eiVw5tQpFE99Q3r/9u2s7g6I/b/tFtIHdywpCOD7j6sKny8fh58zTrWFWmVjuzoKKV9dGSoI
        IK2bIO6jyFsxCu1oPvopoq2Q8gvt1aM7PLx3h72p1rB65QohT6J7l84Qce+W4PwobCX0zo/hVVQUDB82
        zJDPnFkz2DI5aFFJm7ZlnbyCADaEiAtOfVrmYp1qLVE76kI6t9g+3vvd9ILzaYVRWx5CO5IS3Ci0O4jo
        K6OEdrtCt7I301oohCtWVAyHWjVvBk8f3BOc//zPcHjz8iXrfC39g4KEvKhlevzAuq6AWhf3dLGbMwrl
        zigI4Mn+LuCaJtZhFMeTEznnWsOP40upeRHd2pcSBLB9+QfC58hkJMHMDaF97m8QoSKurq5KDB7XVTst
        83+YLeRdqGABeHTnhuB84tWzp6zD9UQ9fw4+ulm/byd8xZbNUbliRSHtnW2aXT9Io2q5hM8n9inEOtcS
        b3bXg8K5xZ1A6+a2FgQwekAV4XMkAEkQM7khk1bt4hLamUI/KbN0/hyD85VfP+NsU4Ru2ybkSQNCrmyO
        kcPFbiRkeBVBALvnNRU+p3WAQz9UYJ1sjr7YfWjzKVLAQwgBiRKFs2mvoYU0GoM51LIg8xDDql2mjBnh
        +6nf2XXV7q/wMHBzc1PL8PL0hCfhdw0CePkkgnW0OYpquhWK869fsi4y2bt7p5qOKFPYw7APwLeq6Dyv
        LGlg38zyrKP10DrAsA55hfTE2jnir582jequof0JDrX2CBvatWjWDG7+cYm9YfGBpni15QR07GBwPvHq
        uXXNv5ZhQ4cKedPMH1cHDv2YZPN0X0EAt7b6g5du04ZrahcY1Tk/PNlam3U8cWxeRahZxjjB1bWd2PcT
        fvUMS9m0j8EhRs3KRkRfoDJV+vOPy9mbZA9os6e2vAmfjWcF8DrqBetkcyxcsEDIm1ovrg4ctD9Bm7ZE
        wSzw5pi4JLxvUTNwczXOP7jjqL5NLS+YFPSesv4/d0QxZWOIT5GMSpinv75a+VyG0G/HCn/9dXT2gU5H
        2dUotKNTLmxo17tnj3iFdtZAU77acudjyMYKwIrRv54tmzcLedOglasDBw1uc+USN2TQTmCtAIiDy1tC
        Dq/0wnW20LZJEXh+UdxK/uR8MBTKZ2glaHOqXa0UYtjuTFDzt3v7NvbG2Jt5s2cJZU+b9A0vAIzxOSeb
        Y9XKlULeX3/5BVsHUyxbtFBIT7/eZV+JO4OIO7u7QrumRdlftymyZkkLIePrG7aC0R6A1o0MU9I3kXSI
        XYxCuy8RNrQbO2okPPvrEXtDHMHmdWuFOowYMogVwKsXz1knm2PKZLEZX7JgPlsHc/g1aSLkQUfA9i70
        M4gArgTD4fUBENCmpOJcbRotdCTs86E14PHZYMHxBImhX4C41oDQYJyOndvFaiO0mKAvBKpXrQqnjx1h
        b4IjuXD6pFCPShXKswJ4+TSSdbI5/Pz8hLxpdM/VwRz3b9+EvHnyCPmkc0sF66c2MIrg6iDFkf9cHw5H
        N3ZRYvrpnzeARZObKlvAbx3sa3B6DC//GAKdWpUQyomGfqzxNgrt5iOG0C5zpkwwPWSqTfPl9ua9QrH7
        62jsceHEUYMAXkQ8Yp1sivCwMEibNvaX6InhpS2bRrQcP3TAsDRNzf2wLqUh6nBXjQgClZaAc7A5zm3v
        AWWLs3sefkFSIvGyD5BwxFBAqxbNHRLa2cqQ4GChXh39PzAIgLAlEggeOFDIs3uXLmzZ1rLvt13s/oQC
        uTLA8gl14B/tMbELQehY48kfPWFHg2Bg9/KQmj82Ths/aJNNnC0Pwj7AgEI7Wnzhvujb4NLZ08qBkJj6
        pUyZEtat+tEgAFou5pytZ+/vvyvjmZj8qFU5sn8fW7YtUBeZP18+NV8t+bwzKKeEj61o+f8zg2d6Afxh
        bA0izwUrEz50RIwLIaP5HonzSSBqMmjC4BkiZEw3gta7bdkokVD07ydufcqUKSMc2L3DIAJL6wEXz5+H
        HNnF9fWOHfzZMuMChcVtW7cS8tdDD4eoWNIT2jbID91bFYFOzYuCX92CULiAh7Ljh0uj4SRCZyjiZKWR
        w4gh4+LFiimzbtyXcga4wZa7uzssWzBXEMDzR/fhtYmIYPOmTcreQG0etJ/QEecO1q1eJYxd7AydoWiD
        WG101u4rxBDaUdM6ctiQBA3t4goNtrgt23Vr1YQta1dD5P070SIIV8NC2gNATX6zZoajVEo34EjR06CS
        ziLS6qGpPYXmoG1zH+J4h85IcJ8jNA7wRsyaByIcYoyhks/7sGvDGmUhhfsCzsjWjRuUyIT7PvTr9m1Q
        H7p27gg9ugRA08aNDM19DLSmv2rFMrYMR3DxzCllDySddMqXN6/S3XJ1Kle2jNINU91i9ihYOMv4AKEn
        kbFGU7k7ESERKWvCJ2Pg5pnjcPv8SUNlnZ2zJ45B4ffeE76TLeTJk9sug774QFPJFGGRMGiQS12cpVDb
        1MZUhERATykxWCtEuLhxg3pwdFco3Dp7QuHOxTNsYc4OdVkzpoWAZzZhPdws9AujcwTOOMi1FhLO6I9H
        CFFRNLT72mB03l29qH9gD9XxMdw+l/haAC3UPNKePmpaufEBTfb4NmygiOXezetsHokRmiLXdSMPEcND
        oy4iygWurmngyvFDBgEQLyP/YgtJjNBBDnqGwInDByHs1g32mqRCrZo1tAIgsiOCXUaUD93d0yl9PieA
        yPuJt0lMzjRtLB5DQ+hBWoIJmzjmTJ3MCiD82tuf7pXYBs1daHcnIzSxZ1gXoKdjqhdRK/DxoI9g9eIF
        sOmn5QK/bw9Vnq+XEFDzbG7h5fK5M2w6yR5lzWHu7JlQsIDhaWE/IgajZ8bcQPQXv3VqVKumzN3rnU9H
        vLnrJWahx8fSLC9rFRHDli5nYGfor2fevHh6UEuWzJkNs5USs9ASPj1H0ayZ3N71tkBHKyN2fQvQsIHx
        /J7EJHcQm9YEKiD0pOm9iJqRn28D6Nu9q4EBfXopEyf2hjZfmtpdRKtpE7/4nE2XHBms27eA3ELo3QG0
        DSzO+wHoyVdqpotnTWejgwfX/2CdJEk4nkf8qXU+YZcngUkBJBKkAJI5UgDJnAQRAC0SzZz8tYG500Ng
        xZLFyQJafzd3OJQmp+jpJlxaR0IbSrS+QuwigB6IPuNkD60c0kyb3vm/bljPLb++Lei9gvE2ep3aC4Qr
        IFnTs0vn11dPH3uqpX3rls40OWW3J4F2QNQnXkr+/4yA6d98Bcd3hwpMGOcU09M04zcVsavR8mEnhJ7g
        SdAhQ7XQEcEDlMUjPeNHj1IetqhHe9LGI3NmGNCrR6IhuE8gLJoRYnB+DHOmToKBvQPZtDE0qldX/f5E
        /do12fs3ZvhQ9v7VqV1LSI/MRcgvfRCazXW47UPUCti6f4Cmd2PSFsibl72RSZmJn4gtxScjhrL3z1R0
        RTOk2vRIfSRBTQogHkgBSAGo35+QAmBuUlJGCkAKQP3+hBQAc5OSMlIAUgDq9yekAJiblJSRApACUL8/
        IQXA3KSkjBSAFID6/QkpAOYmJWWkAKQA1O9PSAEwNykpIwUgBaB+f0IKgLlJSRkpAAcK4MiOX2HLqhWw
        YcViu7Fz3c9sWXFFCsABAqCdODWqVFKeDqqtm72gJ475t24J29f8xJZvC1IAdhTAsV3boFO7NnF6vl5c
        oPcdzZw0ka2LtUgB2FEAndq3VfNKKOjBkQu+/46tjzVIAdhJADO+nWD45XtmywrNG/vCh21bqwR08Fce
        oBhX6D3E9Op6bTk5c2SHvVvWs/WyhBSAnQRQ9D3xGbu+devApaMHhDrcvXgWXtnh9XT0+Fn9o1gH9evN
        1ssSUgB2EMDimdPUPAgvz2wG5xOP79vvZVXrV/8slJnL25utmyWkAOwgAHowhbYOowYPNNbh3El4+dR+
        L6ekR7SWLVNaKJfCRK5+5pACsIMA6tcSH364Z/N6Q/n3Lp9jy48P+odTffvZOLZ+5pACsIMAfDS/RBoI
        Xjt11FD+/av2f77/onlz1XKJkYM+YutnDikAOwigRNEiah6pUqViyw+/epktPz6sXLZULZeIy0BQCkAK
        QMhDCoC5SZaQAohNj0gBcOVLATjOpACikQJApAD4OppCCkAKQMhDCoC5SZaQAohNj0gBcOVLATjOpACi
        kQJApAD4OppCCkAKQMhDCoC5SZaQAohNj0gBcOVLATjOpACikQJApAD4OppCCkAKQMgjMQmAXjNfA7mO
        qBXQv0QqhuD+/dgXHLm5ualp6VnB0yZ+CQdDN7M3yxSJVQDb165SThhp86hWqSJ7/0y9jKtq5cpCemQG
        UhxxqL2LCG8Rsyf58uSG1YvmsTeNIzEKYOywwZAa66pNb0f+RcYjhjeD28t2IlzBdoO2WR/YupG9eXoS
        mwDmhUxJqONr9JIPu1s1hCvM7nwcPIC9gXoSmwAqvl9OSOdAwhDqqu1qQYhaSGBAJ1g+d5aBn5cuUl6b
        YguTJk7QVh5aNm3M3kA9iU0AdKg0Jg0dYqEXcBnv4WzYvHYNe59MsWX9OihXtoxQJ8QbsauNQtQCFs4I
        YW/4YxOjfnNcOntaW3Fo2rA+ewP1JDYBUB1j0pQtVZKt771LcTvH0LGDv1AnpABiV7NKAJH377EVNIcU
        QCxhly+wZVrCaQTwOMz2c3hSALE4awtQCVmHqAU0QSexcWtv218iHdi9m7biUDBfXuja4QOLZMvqoaZx
        cXFh69O/dyBbZnxo7ucn1LdCubJs/fS4aCIAGgNw9e3boxsMCR7IlmuO4sWKCXVCZiH08u/qSJwHhDSx
        4FSvkpfEidOID2KTlUYiEC5DSeIjCqmCWGXUZJxFuIwkiZcbiBti0ZogakL3dOlg5KCBsGzOTCFmXbty
        GRuXSpyDyV9PBI8sWbQCIOjdjxZtIqImmvDJGHbE+iLiT3ZEKnEe9BELMg+xaAsQNdGuDWtYAbx8EsEW
        KnEe7t28rnU+sRGxaIsQNRH35A0pgMTBw3t3tM4nNiMWTQogiSAFkMyRAkjmxFUAtL1ITfTLkgWsAF5E
        PGILlTgPZ08c0zqf+AmxaAMQNVH1ypXgwqG9BgFE3L3FFipxDp48egCtWjTXOp+gLWMWLSfyElETZkif
        HkoVL2agXJky8H65spJ4UsHHB/oE9oRHYcb9FFGRETBqxHCoXLEim9YUWT1iF8ui+Qcphlhl4xB9BhIH
        E9S392N0+jUt30+d8pC7Ng5MRaw2Wg+YhnAZSRzHXERvgxHuWltYjKRGbLY6yBokHOEyltiH/5ATSEFE
        b5mQ7Qg14VxaUzxCNiFNERP2zjv/A5vUSOOp/FM2AAAAAElFTkSuQmCC
</value>
  </data>
</root>